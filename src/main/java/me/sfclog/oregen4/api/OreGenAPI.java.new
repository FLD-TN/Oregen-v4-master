package me.sfclog.oregen4.api;

import me.sfclog.oregen4.Main;
import me.sfclog.oregen4.config.OreLevel;
import me.sfclog.oregen4.config.OreLevelUtils;
import me.sfclog.oregen4.island.IslandOreManager;
import me.sfclog.oregen4.util.Color;

import org.bukkit.Bukkit;
import org.bukkit.Location;
import org.bukkit.World;
import org.bukkit.entity.Player;

import java.util.Map;
import java.util.UUID;

/**
 * Public API for OreGen4
 * Các plugin khác có thể sử dụng API này để tương tác với OreGen4
 * 
 * Phiên bản mới sử dụng hệ thống lưu trữ cấp độ ore theo đảo,
 * thay vì theo quyền của người chơi.
 */
public class OreGenAPI {

    private static OreGenAPI instance;

    /**
     * Constructor khởi tạo API
     */
    public OreGenAPI() {
        instance = this;
    }

    /**
     * Lấy instance singleton của API
     * 
     * @return Instance API
     */
    public static OreGenAPI getInstance() {
        return instance;
    }

    /**
     * Cập nhật cấp độ ore cho đảo dựa trên vị trí của người chơi
     * 
     * @param player Người chơi đang đứng trên đảo cần cập nhật
     * @param level  Cấp độ ore (0-7, trong đó 0 là mặc định)
     * @param environment Môi trường (thế giới) để cập nhật, mặc định là NORMAL
     * @return True nếu thành công, false nếu không
     */
    public boolean updateIslandOreLevel(Player player, int level, World.Environment environment) {
        if (player == null) {
            return false;
        }

        if (level < 0 || level > 7) {
            return false;
        }

        // Mặc định là thế giới thường
        if (environment == null) {
            environment = World.Environment.NORMAL;
        }

        try {
            // Lấy ID của đảo từ vị trí của người chơi
            String islandId = getIslandIdFromLocation(player.getLocation());
            
            if (islandId == null) {
                return false;
            }

            if (level > 0) {
                // Lấy OreLevel tương ứng với cấp độ
                String permission = OreLevelUtils.getPermissionFromLevelId(level);
                OreLevel oreLevel = OreLevelUtils.getOreLevel(permission);
                
                if (oreLevel != null) {
                    // Cập nhật cấp độ ore cho đảo
                    IslandOreManager.setIslandOreLevel(islandId, environment, oreLevel);
                    return true;
                }
            } else {
                // Nếu level là 0, xóa cấp độ ore (reset về mặc định)
                Map<World.Environment, OreLevel> envMap = IslandOreManager.getIslandOreLevels(islandId);
                if (envMap != null) {
                    envMap.remove(environment);
                    if (envMap.isEmpty()) {
                        IslandOreManager.removeIsland(islandId);
                    }
                }
                return true;
            }
        } catch (Exception e) {
            Bukkit.getLogger().warning(Color.tran("&c[OreGen4] Lỗi khi cập nhật cấp độ ore cho đảo: " + e.getMessage()));
            return false;
        }
        
        return false;
    }
    
    /**
     * Lấy cấp độ ore hiện tại của đảo
     * 
     * @param location Vị trí trên đảo
     * @param environment Môi trường (thế giới) để kiểm tra, mặc định là NORMAL
     * @return Cấp độ ore hiện tại, hoặc 0 nếu không tìm thấy
     */
    public int getIslandOreLevel(Location location, World.Environment environment) {
        if (location == null) {
            return 0;
        }
        
        // Mặc định là thế giới thường
        if (environment == null) {
            environment = World.Environment.NORMAL;
        }
        
        try {
            // Lấy ID của đảo từ vị trí
            String islandId = getIslandIdFromLocation(location);
            
            if (islandId == null) {
                return 0;
            }
            
            // Lấy cấp độ ore của đảo
            OreLevel oreLevel = IslandOreManager.getIslandOreLevel(islandId, environment);
            
            if (oreLevel != null) {
                String permission = oreLevel.getPermission();
                return OreLevelUtils.getLevelIdFromPermission(permission);
            }
        } catch (Exception e) {
            Bukkit.getLogger().warning(Color.tran("&c[OreGen4] Lỗi khi lấy cấp độ ore của đảo: " + e.getMessage()));
        }
        
        return 0;
    }
    
    /**
     * Lấy ID của đảo từ vị trí
     * 
     * @param location Vị trí cần kiểm tra
     * @return ID của đảo hoặc null nếu không tìm thấy
     */
    private String getIslandIdFromLocation(Location location) {
        // Thử lấy từ BentoBox hook
        if (Main.hookbentobox != null) {
            return Main.hookbentobox.getIslandIdAt(location);
        }
        
        // Thử lấy từ SuperiorSkyblock hook
        if (Main.hooksuper != null) {
            return Main.hooksuper.getIslandID(location);
        }
        
        return null;
    }
    
    /**
     * Xóa dữ liệu ore level của đảo
     * 
     * @param location Vị trí trên đảo
     * @return True nếu thành công, false nếu không
     */
    public boolean resetIslandOreLevel(Location location) {
        if (location == null) {
            return false;
        }
        
        try {
            // Lấy ID của đảo từ vị trí
            String islandId = getIslandIdFromLocation(location);
            
            if (islandId == null) {
                return false;
            }
            
            // Xóa dữ liệu ore level của đảo
            IslandOreManager.removeIsland(islandId);
            return true;
        } catch (Exception e) {
            Bukkit.getLogger().warning(Color.tran("&c[OreGen4] Lỗi khi xóa dữ liệu ore level của đảo: " + e.getMessage()));
            return false;
        }
    }
    
    /**
     * Phương thức cũ: Cập nhật quyền ore cho người chơi
     * @deprecated Sử dụng {@link #updateIslandOreLevel(Player, int, World.Environment)} thay thế
     */
    @Deprecated
    public boolean updatePlayerPermission(Player player, String level) {
        Bukkit.getLogger().warning(Color.tran("&c[OreGen4] Phương thức updatePlayerPermission đã lỗi thời. Sử dụng updateIslandOreLevel thay thế."));
        return false;
    }
}